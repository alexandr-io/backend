version: "3.7"

services:

  mongodb:
    image: mongo:4.4.0
    container_name: mongodb
    env_file: .env-dev
    ports:
      - "27017:27017"
    volumes:
      - "mongodb_data_container:/data/db"

  redis:
    image: redis:6.0.6
    container_name: redis
    ports:
      - "6379:6379"

  # User Service
  user:
    container_name: user
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-dev
      args:
        microservice: user
    depends_on:
      - mongodb
    env_file: .env-dev
    environment:
      MONGO_URL: mongodb
      REDIS_URL: redis
      AUTH_URL: auth
      EMAIL_URL: email
    ports:
      - "3000:3000"
    volumes:
      - "./microservices/user/app:/microservices/user/app"
      - "./grpc:/grpc"
      - "./common:/common"

  # Auth service
  auth:
    container_name: auth
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-dev
      args:
        microservice: auth
    depends_on:
      - mongodb
      - redis
    env_file: .env-dev
    environment:
      MONGO_URL: mongodb
      REDIS_URL: redis
      USER_URL: user
      LIBRARY_URL: library
      EMAIL_URL: email
    ports:
      - "3001:3000"
    volumes:
      - "./microservices/auth/app:/microservices/auth/app"
      - "./grpc:/grpc"
      - "./common:/common"

  # Media service
  media:
    container_name: media
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-dev
      args:
        microservice: media
    depends_on:
      - mongodb
    env_file: .env-dev
    environment:
      MEDIA_PATH: '/media/'
      MEDIA_URI: 'file'
      MONGO_URL: mongodb
      AUTH_URL: auth
      LIBRARY_URL: library
    ports:
      - "4001:3000"
    volumes:
      - "./microservices/media/app:/microservices/media/app"
      - "./microservices/media/.media:/media"
      - "./grpc:/grpc"

  # Metadata service
  metadata:
    container_name: metadata
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile-dev-python
      args:
        microservice: metadata
    env_file: .env-dev
    volumes:
      - "./grpc:/grpc"

  # Doc service
  doc:
    container_name: doc
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-dev
      args:
        microservice: doc
    env_file: .env-dev
    ports:
      - "4000:3000"
    volumes:
      - "./microservices/doc/app:/microservices/doc/app"

  # Library service
  library:
    container_name: library
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-dev
      args:
        microservice: library
    depends_on:
      - mongodb
    env_file: .env-dev
    environment:
      MONGO_URL: mongodb
      AUTH_URL: auth
      METADATA_URL: metadata
    ports:
      - "3002:3000"
    volumes:
    - "./microservices/library/app:/microservices/library/app"
    - "./grpc:/grpc"

  # Email service
  email:
    container_name: email
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-dev
      args:
        microservice: email
    env_file: .env-dev
    volumes:
      - "./microservices/email/app:/microservices/email/app"
      - "./grpc:/grpc"

volumes:
  mongodb_data_container:
