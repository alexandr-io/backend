version: "3.7"

services:

  mongodb:
    image: mongo:4.4.0
    container_name: mongodb
    env_file: .env-dev
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db

  redis:
    image: redis:6.0.6
    container_name: redis
    ports:
      - 6379:6379

  zookeeper: # needed for kafka
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  broker:
    image: wurstmeister/kafka:2.12-2.5.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: ${MY_IP}

  # User Service
  user:
    container_name: user
    build:
      context: microservices/user/app
      dockerfile: Dockerfile-dev
    depends_on:
      - mongodb
      - broker
    env_file: .env-dev
    environment:
      MONGO_URL: mongodb
      REDIS_URL: redis
      KAFKA_URL: ${MY_IP}
    ports:
      - "3000:3000"
    volumes:
      - "./microservices/user/app:/app"

  # Auth service
  auth:
    container_name: auth
    build:
      context: microservices/auth/app
      dockerfile: Dockerfile-dev
    depends_on:
      - redis
      - broker
    env_file: .env-dev
    environment:
      REDIS_URL: redis
      KAFKA_URL: ${MY_IP}
    ports:
      - "3001:3000"
    volumes:
      - "./microservices/auth/app:/app"

volumes:
  mongodb_data_container:
