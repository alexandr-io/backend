components:
  schemas:
    BadInput:
      properties:
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
      type: object
    BadRequestErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadInput'
      description: Bad Request
    BookMetadataCreateRequest:
      properties:
        author:
          description: The author of the book
          example: J.K. Rowling
          type: string
        description:
          description: The description of the book
          example: A wizard to his new school.
          type: string
        library_id:
          description: The ID of the library to store the book
          example: My Library
          type: string
        publisher:
          description: The publisher of the book
          example: Bloomsbury
          type: string
        tags:
          description: The tags of the book
          example:
          - Fantasy
          - Action
          type: array
        title:
          description: The title of the book
          example: Harry Potter
          type: string
      required:
      - title
      - library_id
      type: object
    BookMetadataCreateResponse:
      content:
        application/json:
          schema:
            properties:
              author:
                description: The author of the book
                example: J.K. Rowling
                type: string
              description:
                description: The description of the book
                example: A wizard to his new school.
                type: string
              id:
                description: The ID of the newly created metadata object
                example: 5fbfe5[...]7076844
                type: string
              publisher:
                description: The publisher of the book
                example: Bloomsbury
                type: string
              tags:
                description: The tags of the book
                example:
                - Fantasy
                - Action
                type: array
              title:
                description: The title of the book
                example: Harry Potter
                type: string
            type: object
      description: A book object
    BookMetadataDeleteRequest:
      properties:
        book_id:
          description: The ID of the book
          example: Harry Potter
          type: string
        library_id:
          description: The ID of the library of the book
          example: My Library
          type: string
      required:
      - book_id
      - library_id
      type: object
    BookMetadataDeleteResponse:
      type: object
    BookMetadataRetrieveRequest:
      properties:
        book_id:
          description: The ID of the book
          example: Harry Potter
          type: string
        library_id:
          description: The ID of the library of the book
          example: My Library
          type: string
      required:
      - book_id
      - library_id
      type: object
    BookMetadataRetrieveResponse:
      content:
        application/json:
          schema:
            properties:
              author:
                description: The author of the book
                example: J.K. Rowling
                type: string
              description:
                description: The description of the book
                example: A wizard to his new school.
                type: string
              id:
                description: The ID of the newly created metadata object
                example: 5fbfe5[...]7076844
                type: string
              publisher:
                description: The publisher of the book
                example: Bloomsbury
                type: string
              tags:
                description: The tags of the book
                example:
                - Fantasy
                - Action
                type: array
              title:
                description: The title of the book
                example: Harry Potter
                type: string
            type: object
      description: A book object
    Field:
      properties:
        name:
          type: string
        reason:
          type: string
      type: object
    LibrariesNamesData:
      properties:
        id:
          example: 5fbfe5[...]7076844
          type: string
        name:
          example: My Library
          type: string
      type: object
    LibrariesNamesRetrieveResponse:
      content:
        application/json:
          schema:
            properties:
              libraries:
                $ref: '#/components/schemas/LibrariesNamesData'
                description: The list of libraries
                type: array
            required:
            - username
            type: object
      description: A list of the user libraries
    LibraryCreateRequest:
      properties:
        description:
          description: The description of the library
          example: A library with some books
          type: string
        name:
          description: The name of the library to create
          example: My Library
          type: string
      required:
      - name
      type: object
    LibraryCreateResponse:
      content:
        application/json:
          schema:
            properties:
              books:
                description: The list of books in the library
                example: []
              description:
                description: The description of the newly create library
                example: A library with some books
                type: string
              name:
                description: The name of the newly created library
                example: My Library
                type: string
            type: object
      description: A library object
    LibraryDeleteRequest:
      properties:
        name:
          description: The name of the library to create
          example: My Library
          type: string
      required:
      - name
      type: object
    LibraryDeleteResponse:
      type: object
    LibraryRetrieveRequest:
      properties:
        name:
          description: The name of the library to create
          example: My Library
          type: string
      required:
      - name
      type: object
    LibraryRetrieveResponse:
      content:
        application/json:
          schema:
            properties:
              books:
                description: The list of books in the library
                example: []
              description:
                description: The description of the newly create library
                example: A library with some books
                type: string
              name:
                description: The name of the newly created library
                example: My Library
                type: string
            type: object
      description: A book object
    UnauthorizedErrorResponse:
      description: Unauthorized
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      description: Go to <a href="http://localhost:4000/auth#section/Authentication">/auth</a> to see more documentation.
      scheme: bearer
      type: http
info:
  description: |-
    Documentation for the Alexandrio's LIBRARY microsecervice REST API

     <b>You can find the documentation of the others MS in these pages:</b>

     <a href="http://localhost:4000/auth" class="sc-fzooss hmVskR">Auth</a> <a href="http://localhost:4000/user" class="sc-fzooss hmVskR">User</a> <a href="http://localhost:4000/library" class="sc-fzooss hmVskR">Library</a> <a href="http://localhost:4000/media" class="sc-fzooss hmVskR">Media</a>
  title: LIBRARY Documentation
  version: v1
openapi: 3.0.2
paths:
  /book:
    delete:
      description: Delete the metadata of a book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookMetadataDeleteRequest'
      responses:
        "200":
          $ref: '#/components/schemas/BookMetadataDeleteResponse'
        "400":
          $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          $ref: '#/components/schemas/UnauthorizedErrorResponse'
      security:
      - bearerAuth: []
      servers:
      - description: Production server
        url: //library.alexandrio.cloud
      - description: Preprod server
        url: //library.preprod.alexandrio.cloud
      summary: Book Delete (metadata)
      tags:
      - BOOKS
    get:
      description: Retrieve the metadata of a book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookMetadataRetrieveRequest'
      responses:
        "200":
          $ref: '#/components/schemas/BookMetadataRetrieveResponse'
        "400":
          $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          $ref: '#/components/schemas/UnauthorizedErrorResponse'
      security:
      - bearerAuth: []
      servers:
      - description: Production server
        url: //library.alexandrio.cloud
      - description: Preprod server
        url: //library.preprod.alexandrio.cloud
      summary: Book Retrieve (metadata)
      tags:
      - BOOKS
    post:
      description: Create the metadata of a book
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookMetadataCreateRequest'
      responses:
        "200":
          $ref: '#/components/schemas/BookMetadataCreateResponse'
        "400":
          $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          $ref: '#/components/schemas/UnauthorizedErrorResponse'
      security:
      - bearerAuth: []
      servers:
      - description: Production server
        url: //library.alexandrio.cloud
      - description: Preprod server
        url: //library.preprod.alexandrio.cloud
      summary: Book Create (metadata)
      tags:
      - BOOKS
  /libraries:
    get:
      description: Retrieve a list of the current user's libraries
      responses:
        "200":
          $ref: '#/components/schemas/LibrariesNamesRetrieveResponse'
        "401":
          $ref: '#/components/schemas/UnauthorizedErrorResponse'
      security:
      - bearerAuth: []
      servers:
      - description: Production server
        url: //library.alexandrio.cloud
      - description: Preprod server
        url: //library.preprod.alexandrio.cloud
      summary: Libraries Retrieve
      tags:
      - LIBRARIES
  /library:
    delete:
      description: Delete a library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryDeleteRequest'
      responses:
        "200":
          $ref: '#/components/schemas/LibraryDeleteResponse'
        "400":
          $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          $ref: '#/components/schemas/UnauthorizedErrorResponse'
      security:
      - bearerAuth: []
      servers:
      - description: Production server
        url: //library.alexandrio.cloud
      - description: Preprod server
        url: //library.preprod.alexandrio.cloud
      tags:
      - LIBRARIES
    get:
      description: Retrieve a library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryRetrieveRequest'
      responses:
        "200":
          $ref: '#/components/schemas/LibraryRetrieveResponse'
        "400":
          $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          $ref: '#/components/schemas/UnauthorizedErrorResponse'
      security:
      - bearerAuth: []
      servers:
      - description: Production server
        url: //library.alexandrio.cloud
      - description: Preprod server
        url: //library.preprod.alexandrio.cloud
      tags:
      - LIBRARIES
    post:
      description: Create a library
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryCreateRequest'
      responses:
        "201":
          $ref: '#/components/schemas/LibraryCreateResponse'
        "400":
          $ref: '#/components/schemas/BadRequestErrorResponse'
        "401":
          $ref: '#/components/schemas/UnauthorizedErrorResponse'
      security:
      - bearerAuth: []
      servers:
      - description: Production server
        url: //library.alexandrio.cloud
      - description: Preprod server
        url: //library.preprod.alexandrio.cloud
      tags:
      - LIBRARIES
tags:
- name: LIBRARIES
- name: BOOKS
